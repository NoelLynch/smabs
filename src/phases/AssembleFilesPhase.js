// Generated by CoffeeScript 1.4.0
var FileSys, SMABSFileSys, handlePhaseOptions, verifyPhase;

FileSys = require("fs");

SMABSFileSys = require("../SMABSUtils");

verifyPhase = function(phase, args) {
  if (!(phase.files != null) && !(phase.dirs != null)) {
    console.log("\t*** No files or dirs specified for phase : " + phase.name);
    return false;
  }
  if (!(phase.dst != null)) {
    console.log("\t*** No destination specified for phase : " + phase.name);
    return false;
  }
  return true;
};

handlePhaseOptions = function(phase, args) {
  if (!(phase.options != null)) {
    console.log("\tno options");
    return;
  }
  if (phase.options.archiveExisting === true) {
    console.log("\tBacking up existing destination");
    SMABSFileSys.copyFile(args.rootDir + phase.dst, args.rootDir + phase.dst + "_OLD");
  }
  if (phase.options.overwriteTarget === true) {
    console.log("\tDeleting existing destination");
    return SMABSFileSys.deleteFileIfExists(args.rootDir + phase.dst);
  }
};

exports.doPhase = function(phase, args) {
  var dir, part, partF, theTarget, _i, _j, _len, _len1, _ref, _ref1;
  if (!verifyPhase(phase, args)) {
    return false;
  }
  handlePhaseOptions(phase, args);
  theTarget = args.rootDir + phase.dst;
  if (phase.files != null) {
    _ref = phase.files;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      part = _ref[_i];
      console.log("\tassembling " + part + " into " + phase.dst);
      partF = FileSys.readFileSync(args.rootDir + part, "utf8");
      FileSys.appendFileSync(theTarget, partF);
    }
  }
  if (phase.dirs != null) {
    _ref1 = phase.dirs;
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      dir = _ref1[_j];
      if ((dir.src != null) && (dir.ext != null)) {
        SMABSFileSys.findAllOfType(args.rootDir + dir.src, dir.ext, true, function(name, dir, path) {
          console.log("\tassembling " + name + " from dir " + dir + " into " + phase.dst);
          partF = FileSys.readFileSync(path, "utf8");
          return FileSys.appendFileSync(theTarget, partF);
        });
      } else {
        console.log("\t*** No src dir or ext specified for dir entry " + dir);
      }
    }
  }
  return true;
};
