// Generated by CoffeeScript 1.4.0
var FileSys, LessC, Path, SMABSUtils, handlePhaseOptions, next;

FileSys = require("fs");

Path = require("path");

LessC = require("less");

SMABSUtils = require("../SMABSUtils");

handlePhaseOptions = function(phase, args) {
  if (!(phase.options != null)) {
    console.log("\tno options");
  }
};

exports.doPhase = function(phase, args) {
  var f, files, filesR, _i, _len, _results;
  if (!(phase.srcDir != null)) {
    console.log("\t*** You must specify a source dir for this phase");
    return;
  }
  handlePhaseOptions(phase);
  filesR = FileSys.readdirSync(args.rootDir + phase.srcDir);
  files = [];
  for (_i = 0, _len = filesR.length; _i < _len; _i++) {
    f = filesR[_i];
    if (Path.extname(f) === ".less") {
      files.push({
        name: Path.basename(f),
        par: Path.dirname(f),
        path: Path.dirname(f) + "/" + Path.basename(f)
      });
    }
  }
  _results = [];
  while (files.length > 0) {
    f = files.pop();
    _results.push(next(args, phase, f.name, f.par, f.path));
  }
  return _results;
};

next = function(args, phase, name, parDir, fullPath) {
  var compiledFile, lessF;
  compiledFile = parDir + "/" + Path.basename(name, ".less") + ".css";
  console.log("\tcompiling " + fullPath + " to " + compiledFile);
  SMABSUtils.deleteFileIfExists(compiledFile);
  lessF = SMABSUtils.getFileContents(fullPath);
  if (lessF === null) {
    console.log("\t*** Could not read file " + fullPath + ", name : " + name + ", base : " + parDir);
    return;
  }
  return LessC.render(lessF, function(e, css) {
    if (!(css != null)) {
      console.log(("\t*** Error compiling " + fullPath + ", Cause : ") + e.toString());
      return;
    }
    return FileSys.writeFileSync(compiledFile, css);
  });
};
