// Generated by CoffeeScript 1.4.0
var FileSys, Util, Wrench, checkConf, getTemplate, saveTemplate;

Wrench = require('wrench');

Util = require('util');

FileSys = require('fs');

saveTemplate = function(name, templateDir, fromDir) {
  var tmplDir;
  console.log("\tSaving template " + name);
  tmplDir = templateDir + "/" + name;
  Wrench.copyDirSyncRecursive(fromDir, tmplDir, {
    forceDelete: true,
    excludeHiddenUnix: true
  });
  return console.log("\t...Template saved");
};

getTemplate = function(name, templateDir, toDir) {
  var tmplDir;
  console.log("\tSaving template " + name);
  tmplDir = templateDir + "/" + name;
  if (!FileSys.existsSync(tmplDir)) {
    console.log("\t...Template does not exist");
    return;
  }
  Wrench.copyDirSyncRecursive(tmplDir, toDir, {
    forceDelete: true,
    excludeHiddenUnix: true
  });
  return console.log("\t...Template loaded");
};

checkConf = function(conf) {
  if (!(conf != null)) {
    return false;
  }
  if (!(conf.templatesDir != null)) {
    console.log("\t*** You must specify a templates directory in the build conf");
    return false;
  }
  return true;
};

exports.doSaveTemplate = function(name, dir, args, conf) {
  if (!checkConf(conf)) {
    return;
  }
  if (!(name != null) || !(dir != null)) {
    console.log("\t*** You must specify a name and a directory to create the template from");
  }
  return saveTemplate(name, args.rootDir + conf.templatesDir, dir);
};

exports.doGetTemplate = function(name, dir, args, conf) {
  if (!checkConf(conf)) {
    return;
  }
  if (!(name != null) || !(dir != null)) {
    console.log("\t*** You must specify a name and a directory to load this template to");
  }
  return getTemplate(name, args.rootDir + conf.templatesDir, dir);
};
